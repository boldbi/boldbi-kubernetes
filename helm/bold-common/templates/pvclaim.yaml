{{- if or (eq .Values.clusterProvider "eks") (eq .Values.clusterProvider "onpremise") }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    {{- include "boldbi.labels" . | nindent 4 }}
  {{- if eq .Values.clusterProvider "eks" }}
  name: efs-sc
  {{- else if eq .Values.clusterProvider "onpremise" }}
  name: bold-storageclass
  {{- end }}
  {{- if eq .Release.Namespace "default" }}
  namespace: {{ .Values.namespace.name }}
  {{- else }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
{{- if eq .Values.clusterProvider "eks" }}
provisioner: efs.csi.aws.com
{{- else if eq .Values.clusterProvider "onpremise" }}
provisioner: kubernetes.io/no-provisioner
{{- end }}
{{- if eq .Values.clusterProvider "onpremise" }}
volumeBindingMode: WaitForFirstConsumer
{{- end }}
---
{{- end }}
{{- if eq .Values.clusterProvider "aks" }}
{{- if and (.Values.persistentVolume.aks.azureStorageAccountName) (.Values.persistentVolume.aks.azureStorageAccountKey) }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "boldbi.labels" . | nindent 4 }}
  {{- if .Values.persistentVolume.aks.secretName }}
  name: {{ .Values.persistentVolume.aks.secretName }}
  {{- else }}
  name: bold-azure-secret
  {{- end }}
  {{- if eq .Release.Namespace "default" }}
  namespace: {{ .Values.namespace.name }}
  {{- else }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
type: Opaque
data:
  azurestorageaccountname: {{ .Values.persistentVolume.aks.azureStorageAccountName }}
  azurestorageaccountkey: {{ .Values.persistentVolume.aks.azureStorageAccountKey }}
---
{{- end }}
{{- end }}
apiVersion: v1
kind: PersistentVolume
metadata:
 labels:
    {{- include "boldbi.labels" . | nindent 4 }}
 name: {{ .Values.persistentVolume.name }}
 {{- if eq .Release.Namespace "default" }}
 namespace: {{ .Values.namespace.name }}
 {{- else }}
 namespace: {{ .Release.Namespace }}
 {{- end }}
spec:
 capacity:
   storage: {{ .Values.persistentVolume.capacity }}
 accessModes:
 - ReadWriteMany
 {{- if or (eq .Values.clusterProvider "eks") (eq .Values.clusterProvider "aks") }}
 persistentVolumeReclaimPolicy: Retain
 {{- end }}
 {{- if eq .Values.clusterProvider "onpremise" }}
 storageClassName: bold-storageclass
 hostPath:
   path: "{{ .Values.persistentVolume.onpremise.hostPath }}"
 {{- else if eq .Values.clusterProvider "eks" }}
 storageClassName: efs-sc
 csi:
   driver: efs.csi.aws.com
   volumeHandle: {{ .Values.persistentVolume.eks.efsFileSystemId }}
 {{- else if eq .Values.clusterProvider "aks" }}
 storageClassName: azurefile
 azureFile:
   {{- if .Values.persistentVolume.aks.secretName }}
   secretName: {{ .Values.persistentVolume.aks.secretName }}
   {{- else }}
   secretName: bold-azure-secret
   {{- end }}
   shareName: {{ .Values.persistentVolume.aks.fileShareName }}
   readOnly: false
 {{- else if eq .Values.clusterProvider "gke" }}
 nfs:
   path: /{{ .Values.persistentVolume.gke.fileShareName }}
   server: {{ .Values.persistentVolume.gke.fileShareIp }}
 {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 labels:
    {{- include "boldbi.labels" . | nindent 4 }}
 name: {{ .Values.persistentVolume.name }}-claim
 {{- if eq .Release.Namespace "default" }}
 namespace: {{ .Values.namespace.name }}
 {{- else }}
 namespace: {{ .Release.Namespace }}
 {{- end }}
spec:
 accessModes:
 - ReadWriteMany
 {{- if eq .Values.clusterProvider "onpremise" }}
 storageClassName: bold-storageclass
 {{- else if eq .Values.clusterProvider "eks" }}
 storageClassName: efs-sc
 {{- else if eq .Values.clusterProvider "aks" }}
 storageClassName: azurefile
 {{- else if eq .Values.clusterProvider "gke" }}
 storageClassName: ""
 {{- end }}
 volumeName: {{ .Values.persistentVolume.name }} 
 resources:
   requests:
     storage: {{ .Values.persistentVolume.capacity }}